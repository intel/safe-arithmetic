name: Publish GitHub Pages
permissions: read-all

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  DEBIAN_FRONTEND: noninteractive

jobs:
  configure:
    name: Configure Github Pages Publishing
    runs-on: ${{ github.repository_owner == 'intel' && 'intel-' || '' }}ubuntu-24.04
    outputs:
      enable_publish: ${{ steps.check.outputs.isfork == 'NO' }}
    steps:
      - id: check
        name: Check if Fork
        run: |
          if [ "${{ github.repository_owner }}" = "intel" ]; then
            echo "This is the main repository, **enabling publishing**" >> "$GITHUB_STEP_SUMMARY"
            echo "isfork=NO" >> "$GITHUB_OUTPUT"
          else
            echo "This is a fork, **disabling publishing**" >> "$GITHUB_STEP_SUMMARY"
            echo "isfork=YES" >> "$GITHUB_OUTPUT"
          fi

  build:
    needs: configure
    name: Build Documentation
    runs-on: ${{ github.repository_owner == 'intel' && 'intel-' || '' }}ubuntu-24.04
    steps:
      - name: Checkout source
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Node.js
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: 20

      - name: Install Mermaid
        run: |
          sudo npm install -g @mermaid-js/mermaid-cli@11.2.1
          npx puppeteer browsers install chrome-headless-shell

      - name: Install asciidoctor
        run: |
          sudo apt update
          sudo apt install -y asciidoctor
          sudo gem install asciidoctor asciidoctor-diagram rouge

      - name: Restore CPM cache
        env:
          cache-name: cpm-cache-0
        id: cpm-cache-restore
        uses: actions/cache/restore@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ~/cpm-cache
          key: ${{runner.os}}-${{env.cache-name}}-${{ hashFiles('**/CMakeLists.txt', 'cmake/**') }}
          restore-keys: |
            ${{runner.os}}-${{env.cache-name}}-

      - name: Configure CMake
        run: cmake -Bbuild -DCPM_SOURCE_CACHE=~/cpm-cache

      - name: Save CPM cache
        env:
          cache-name: cpm-cache-0
        if: steps.cpm-cache-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ~/cpm-cache
          key: ${{runner.os}}-${{env.cache-name}}-${{ hashFiles('**/CMakeLists.txt', 'cmake/**') }}

      - name: Build documentation
        run: |
          test $(cmake --build build -v -t docs | grep -c ERROR) == 0
          touch ./build/docs/.nojekyll
          ls -la ./build/docs

      - name: Setup github pages
        if: needs.configure.outputs.enable_publish == 'true'
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0

      - name: Upload artifacts
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: ${{github.workspace}}/build/docs

  deploy:
    needs: [configure, build]
    if: needs.configure.outputs.enable_publish == 'true'
    name: Deploy Documentation
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ${{ github.repository_owner == 'intel' && 'intel-' || '' }}ubuntu-24.04
    steps:
      - name: Deploy to github pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
